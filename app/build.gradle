plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

//java {
//    toolchain {
//        languageVersion.set(JavaLanguageVersion.of(15))
//    }
//}

android {
    compileSdk versions.compileSdk
    defaultConfig {
        resConfigs("en", "vi")
        applicationId "com.example.hwaa"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }
    kotlinOptions {
        jvmTarget = versions.java.toString()
    }

    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        // Exclude the conflicting file to avoid build issues
        exclude 'META-INF/gradle/incremental.annotation.processors'
    }

    namespace 'com.example.hwaa'
}

dependencies {

    //firebase
    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.analytics.ktx)
    implementation(libs.firebase.database.ktx)
    implementation libs.firebase.auth.ktx
    implementation libs.firebase.common.ktx
    implementation(libs.play.services.auth)
    implementation(libs.firebase.storage.ktx)
    implementation libs.firebase.auth
    implementation libs.firebase.firestore.ktx

    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.lifecycle.extensions
    //appcompat
    implementation libs.androidx.appcompat
    implementation libs.androidx.legacy.support.v4

    // hilt
    implementation libs.hilt.android
    implementation libs.hilt.compiler

    //kotlin
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    //viewxxz
    implementation libs.material
    //activity
    implementation libs.androidx.activity
    implementation libs.androidx.appcompat

    //navigation
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.navigation.fragment.ktx

    //network
    implementation libs.retrofit
//    implementation libs.gson
//    implementation libs.interceptor

    //logger
//    implementation libs.timber

//    implementation libs.dataStore

    //ViewModel
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.junit.ktx
    implementation libs.firebase.database
    implementation libs.firebase.storage
    kapt libs.androidx.lifecycle.livedata.ktx

    // Loading Image
    implementation libs.glide
    kapt libs.glideCompiler

    //noinspection GradleDependency
    implementation libs.androidx.core.ktx.v160
//    debugImplementation libs.leak
    implementation libs.library

    //Room
    implementation(libs.androidx.room.ktx)
    kapt(libs.androidx.room.compiler)

    implementation libs.recyclerview.v7
    implementation libs.design
    implementation libs.glide
    implementation libs.ormlite.android

    //palette
    implementation libs.imagepicker

    //retrofit
    implementation libs.retrofit

    // GSON

    implementation libs.converter.gson

    // coroutine

    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.core
    // picaso
    implementation libs.picasso

//    swipe card
    implementation libs.swipe.card

//    timber
    implementation libs.timber

//    lottie
    implementation libs.lottie
}